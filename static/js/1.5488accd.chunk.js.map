{"version":3,"sources":["components/class-overview/SkillInfo.js","components/HeaderImage.js","components/class-overview/SingleSkill.js","components/class-overview/SingleSkillDemo.js","components/InfoButton.js","components/class-overview/ClassIntro.js","components/class-overview/SkillContainer.js","components/class-overview/SkillTab.js","components/class-overview/ClassSwipe.js","components/class-overview/ClassOutro.js"],"names":["SkillAnimation","animation","name","useState","show","setShow","Img","className","variant","src","onClick","centered","onHide","aria-labelledby","size","Header","closeButton","Title","id","Body","fluid","SkillInfo","skillData","shortDesc","properties","maxLevel","valProperties","arrayProperties","Object","entries","forEach","it","includes","Parser","evaluate","x","d","Math","floor","u","ceil","y","cooltimeMS","getValsFromProperties","animations","map","index","key","icons","icon","alt","type","reqLev","Subtitle","desc","Text","parse","DOMPurify","sanitize","details","detail","replace","match","replaceAll","split","str","as","HeaderImage","props","imageUrl","SingleSkill","state","retrievedData","loading","this","_isMounted","axiosRetry","axios","retries","get","version","then","response","push","data","setState","catch","err","console","log","style","margin","Image","loadingImage","paddingLeft","skill","description","Component","LinkSkill","linkSkill","NotableSkill","cursor","Modal","width","backgroundImage","SingleSkillDemo","LinkSkillDemo","InfoButton","tooltip","OverlayTrigger","placement","overlay","Tooltip","zIndex","Button","ClassIntroDemo","Container","class","Row","Col","md","ClassProperties","content","PropertyBox","skills","notable","classType","ClassProsCons","pros","prosCons","cons","ClassDetail","Table","borderless","classGroup","jobGroup","mainStat","secondaryStat","legion","equipment","weapon","marginBottom","weapons","verticalAlign","secondary","secondaryWeapons","weaponConsumable","ammo","pro","con","baseStats","stat","buffInfo","active","summons","buffCd","buffFifth","binds","iFrame","buildPath","build","ClassCreation","howToCreate","thumbnail","image","height","npc","Card","info","ADD_ATTR","ClassExtraContent","title","ClassIntro","SkillContainer","request","retrievedHolder","offlineHolder","offline","all","splice","levelProperties","smooth","to","scroll","el","scrollWidthOffset","VSkillContainer","yCoordinate","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","convertCommonVToArray","fifth","fifthCommon","commonFifth","SkillTab","primary","hyper","hyperSkillBuild","nodeInfo","Tabs","skilltree","Tab","eventKey","createSkillTabs","recommended","possible","fifthMain","hyperPassive","hyperActive","SwiperCore","use","Scrollbar","ClassSwipe","scrollbar","draggable","hide","spaceBetween","slidesPerView","breakpoints","360","490","770","991","1199","param","classes","explorers","job","process","cygnusKnights","heroes","resistance","nova","sengoku","flora","other","renderSwitch","ClassMoreInfo","moreInfo","link","href","target","rel","ClassSuggestions","ClassCredit","credits","credit","ClassOutro"],"mappings":"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","file":"static/js/1.5488accd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Badge, Card, Image, Modal } from 'react-bootstrap';\r\nimport { Parser } from 'expr-eval';\r\nimport DOMPurify from 'dompurify';\r\nimport parse from 'html-react-parser';\r\nimport '../../css/skill-info.css';\r\n\r\n/*\r\n    Skill component that creates a component to hold and render our skill info like name, desc, and properties \r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction SkillInfo({skillData, name, shortDesc, properties, maxLevel }) {\r\n        //Get the proper values using the properties and calculating with maxLevel\r\n        const valProperties = getValsFromProperties(properties, maxLevel);\r\n        /*\r\n            Starting from top to bottom, Card.Body contains all the contents of our skill info\r\n            The first tag is our skill animations, the && (short-circuit eval) only displays animations if animations exists (or is not null/undefined)\r\n            We add a white background via background-image in styles since some skills have a transparent background\r\n\r\n            Within Card.Title we have the icons, skill name, and any badges such as skill type and for hyper skills a lv requirement\r\n\r\n            Card.Subtitle contains only Master Level info\r\n\r\n            In the Card.Text we parse HTML string and sanitize it before injecting into DOM. Certain skills will not have descriptions if the skill's short desc explains already\r\n            If there are any details to accompany the description we include it below - it is also parsed and sanitized\r\n\r\n            The last component, Card.Subtitle contains our skill's short desc provided by an API\r\n\r\n        */\r\n        return (\r\n            <Card className=\"skill-body\">\r\n                <Card.Body>\r\n                    {skillData.animations && skillData.animations.map( (animation, index) => <SkillAnimation key={index} animation={animation} name={name}/>\r\n                    )}\r\n                    <Card.Title>\r\n                        {skillData.icons.map(( icon, index) => <img key={index} className=\"icon\" src={icon} alt=\"\"/>)}<strong className=\"skill-name\">{name}</strong>\r\n                        <Badge variant=\"secondary\" className=\"badge\">{skillData.type}</Badge>\r\n                        {skillData.reqLev && <Badge variant=\"secondary\" className=\"badge\">Lv. {skillData.reqLev}</Badge>}\r\n                    </Card.Title>\r\n                    <Card.Subtitle className=\"master-level\"><em>Master Level: {maxLevel}</em></Card.Subtitle>\r\n                    {skillData.desc && <Card.Text>{parse(DOMPurify.sanitize(skillData.desc))}</Card.Text>}\r\n                    {skillData.details && <div className=\"skill-detail\"><ul>{skillData.details.map( (detail, index) => <li key={index}>{parse(DOMPurify.sanitize(detail))}</li>)}</ul></div>}\r\n                    {/* Uses regex to replace temp values in string with the proper values from valProperties. As well, does string formatting like we did with desc*/}\r\n                    {/* Lastly, we split the string into multiple parts where new lines are needed */}\r\n                    <div>{\r\n                        shortDesc ? shortDesc.replace(/#(\\w+)/g, (match,key) => valProperties[key]||match).replaceAll('#c', '').replaceAll('#z', '0').replaceAll('#', '').replaceAll('mpCon', '0').replaceAll('\\\\r', '').replaceAll('\\\\N', '\\\\n').replaceAll('\\\\c', '').split('\\\\n').map(str =>\r\n                            <Card.Subtitle as=\"p\" className=\"mb-2 text-muted short-desc\">{str}</Card.Subtitle>) : null\r\n                    }</div>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n}\r\n\r\n//Function call evaluates the expressions from the properties state into values using the Master Level of the Skill\r\n//Used so that we have the proper values for things like Damage, Mana Cost, etc.\r\nfunction getValsFromProperties(properties, maxLevel){\r\n    //Store object entries as array of key/values for use\r\n    const arrayProperties = Object.entries(properties);\r\n    //Create a new object to store the new values\r\n    const valProperties = {};\r\n    //For each property have the key in valProperties the same as arrayProperties and the value our evaluated expression\r\n    arrayProperties.forEach(it =>{\r\n        //If statement to omit non expressions\r\n        if(!it[1].includes(']') && it[0] !== 'action' && it[0] !== 'memo_PL' && it[1] !== 'Image<Rgba32>: 32x32'){\r\n            valProperties[it[0]] = (Parser.evaluate(it[1], { x: maxLevel, d: Math.floor, u: Math.ceil, y: 1}));\r\n        }\r\n    });\r\n    //Required to convert any milliseconds cooldowns into seconds cooldowns else we will have wrong cooldowns (like 500 secs instead of 0.5 secs)  \r\n    if(valProperties.cooltimeMS) { valProperties.cooltimeMS = valProperties.cooltimeMS * 0.001;}\r\n    return valProperties;\r\n}\r\n\r\n/*\r\n    Component used in SkillInfo to show animations of skill, handles logic for displaying it's own animation in a modal\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction SkillAnimation({animation, name}) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n        <span>\r\n            <Card.Img className=\"animation\" variant=\"top\" src={animation} onClick={handleShow}/>\r\n                <Modal centered  show={show} onHide={handleClose} aria-labelledby=\"notable-skill\" size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"notable-skill\">\r\n                            {name}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Image fluid src={animation} className=\"modal-animation\"/>\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default SkillInfo;","import React from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport '../css/header-image.css';\r\n\r\n/*\r\n    Header image component that appears on the top of certain pages\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction HeaderImage(props) {\r\n    return (\r\n        <div className=\"outer-box\">\r\n            <div className=\"header-box\">\r\n                <Image fluid className=\"header\" src={props.imageUrl}/>\r\n                <div className=\"overlay\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderImage\r\n","import React, { Component, useState } from 'react'\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { Image, Modal } from 'react-bootstrap';\r\nimport { version, loadingImage } from '../../special/Values';\r\nimport SkillInfo from './SkillInfo'\r\n\r\n/*\r\n    This file contains Link Skills and Notable Skills, any skills that need to be rendered on its own\r\n*/\r\n\r\n/*\r\n    Renders a single skill, makes API call and renders a SkillInfo component\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nclass SingleSkill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        //SkillContainer holds all the required skills we need to render in skillData\r\n        //Their data will be stored in retrievedData after it has been fetched\r\n        this.state = {\r\n             retrievedData: [],\r\n             skillData: props.skillData,\r\n             loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { skillData } = this.state\r\n        this._isMounted = true;\r\n        axiosRetry(axios, { retries: 3 }); //Retries request up to 3 times if request fails\r\n        //Execute call then store it in the state\r\n        axios.get(`https://maplestory.io/api/GMS/${version}/job/skill/${skillData.id}`)\r\n            .then(response => {\r\n                if(this._isMounted){\r\n                    const skillData = [];\r\n                    skillData.push(response.data);\r\n                    this.setState({\r\n                        retrievedData: skillData,\r\n                        loading: false\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        const { loading, retrievedData } = this.state\r\n        return (\r\n            <div>\r\n            {\r\n                loading ? <div style={{margin: '2rem 40% 2rem 40%'}}><Image src={loadingImage}/><div style={{paddingLeft: '0.5rem'}}>Loading!</div></div> : \r\n                <div>\r\n                {\r\n                    retrievedData.map((skill, index) => \r\n                        <div key={skill.description.id}>\r\n                            <SkillInfo \r\n                                skillData={this.state.skillData}\r\n                                name={skill.description.name}\r\n                                desc={skill.description.desc}\r\n                                shortDesc={skill.description.shortDesc}\r\n                                properties={skill.properties} \r\n                                maxLevel={skill.properties.maxLevel}/>\r\n                        </div>)\r\n                }\r\n                </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n    Component to hold link skill\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport function LinkSkill({linkSkill}) {\r\n    return (\r\n        <div>\r\n            <h2>Link Skill</h2>\r\n            <SingleSkill skillData={linkSkill}/> \r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n    Displays the notable skills in the class properties section and handles modal logic\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport function NotableSkill({ skill }) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n        <span>\r\n            <Image src={skill.icons[0]} className=\"hvr-grow\" style={{margin: '0 0.25rem 0.5rem 0.25rem', cursor: 'pointer'}} onClick={handleShow}/>\r\n            <Modal centered  show={show} onHide={handleClose} aria-labelledby=\"notable-skill\" size=\"lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"notable-skill\">\r\n                            {skill.name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Image src={skill.animations[0]} style={{width: '100%', backgroundImage: 'url(https://www.publicdomainpictures.net/pictures/30000/velka/plain-white-background.jpg)'}}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </span>\r\n    );\r\n}\r\n\r\n\r\nexport default LinkSkill\r\n","import React from 'react'\r\nimport SkillInfo from './SkillInfo'\r\n\r\n/*\r\n    This file contains Link Skills and Notable Skills, any skills that need to be rendered on its own\r\n*/\r\n\r\n/*\r\n    Renders a single skill, makes API call and renders a SkillInfo component\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction SingleSkillDemo({skillData}) {\r\n\r\n    return (\r\n        <SkillInfo \r\n            skillData={skillData}\r\n            name={skillData.name}\r\n            desc={skillData.desc}\r\n            shortDesc={skillData.shortDesc}\r\n            properties={{}} \r\n            maxLevel={skillData.maxLevel}/>\r\n    );\r\n}\r\n\r\n/*\r\n    Component to hold link skill\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport function LinkSkillDemo({linkSkill}) {\r\n    return (\r\n        <div>\r\n            <h2>Link Skill</h2>\r\n            <SingleSkillDemo skillData={linkSkill}/> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LinkSkillDemo\r\n","import React from 'react';\r\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\n/*\r\n    Info Button which when hovered shows a tooltip\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction InfoButton({tooltip}) {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" overlay={\r\n            <Tooltip style={{zIndex: '1'}}>\r\n                {tooltip}\r\n            </Tooltip>\r\n        }>\r\n            <Button variant=\"link\"><span className=\"info-button\"/></Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nexport default InfoButton\r\n","import React from 'react'\r\nimport DOMPurify from 'dompurify';\r\nimport parse from 'html-react-parser';\r\nimport { Col, Container, Image, Table, Row, Card} from 'react-bootstrap';\r\nimport { LinkSkill, NotableSkill } from './SingleSkill';\r\nimport { LinkSkillDemo } from './SingleSkillDemo';\r\nimport InfoButton from '../InfoButton';\r\nimport '../../css/class-overview.css';\r\nimport { weapons, secondaryWeapons, weaponConsumable } from '../../special/Values';\r\n\r\n/*\r\nThis file contains the intro contents of a Class Overview\r\nIn this file you will find:\r\n-ClassIntro - Holds ClassProperties, PropertyBox, and ClassProsCons\r\n-ClassProperties\r\n-PropertyBox - This is the section below ClassProperties that has notable skills and class type\r\n-ClassProsCons\r\n-ClassDetail - Holds the base stats, buffs, build path rendering\r\n-ClassCreation - For classes that have a \"How to Create\" section\r\n-ClassExtraContent - Any extra content like explanation of Dark Sight is rendered here\r\n*/\r\n\r\n\r\n/*\r\n    Renders the upper components of the class overview (Class Properties, Notable Skills + Class Type, and Pros and Cons)\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport function ClassIntro({data}) {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h1 className=\"class-title\">{data.class}</h1>\r\n                <Row>\r\n                    <Col md=\"auto\" className=\"property-container\">\r\n                        <ClassProperties content={data.content}/>\r\n                        <PropertyBox skills={data.skill.notable} classType={data.content.classType}/>\r\n                    </Col>\r\n                    <Col md=\"auto\" className=\"pros-cons-container\">\r\n                        <ClassProsCons pros={data.content.prosCons.pros} cons={data.content.prosCons.cons}/>\r\n                        <LinkSkill linkSkill={data.content.linkSkill}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <hr/>\r\n            <ClassDetail content={data.content}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ClassIntroDemo({data}) {\r\n  return (\r\n      <div>\r\n          <Container>\r\n              <h1 className=\"class-title\">{data.class}</h1>\r\n              <Row>\r\n                  <Col md=\"auto\" className=\"property-container\">\r\n                      <ClassProperties content={data.content}/>\r\n                      <PropertyBox skills={data.skill.notable} classType={data.content.classType}/>\r\n                  </Col>\r\n                  <Col md=\"auto\" className=\"pros-cons-container\">\r\n                      <ClassProsCons pros={data.content.prosCons.pros} cons={data.content.prosCons.cons}/>\r\n                      <LinkSkillDemo linkSkill={data.content.linkSkill}/>\r\n                  </Col>\r\n              </Row>\r\n          </Container>\r\n          <hr/>\r\n          <ClassDetail content={data.content}/>\r\n      </div>\r\n  )\r\n}\r\n\r\n/*\r\n    Properties component in our class overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction ClassProperties({content}) {\r\n  return (\r\n      <div className=\"class-property\">\r\n          <h2>Class Properties</h2>\r\n          <Container>\r\n          <Table borderless>\r\n              <tbody>\r\n              <tr>\r\n                  <th><strong>Class Group</strong></th>\r\n                  <td>{content.classGroup}</td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Job Group</strong></th>\r\n                  <td>{content.jobGroup}</td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Primary Stat</strong></th>\r\n                  <td>{content.mainStat}</td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Secondary Stat</strong></th>\r\n                  <td>{content.secondaryStat}</td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Legion Bonus</strong></th>\r\n                  <td>{content.legion}</td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Primary Weapon</strong></th>\r\n                  <td>\r\n                      {content.equipment[0].weapon.map(it => <Row key={it} style={{marginBottom: '0.2rem'}}><Col><Image src={weapons[it][0]} style={{verticalAlign: 'middle'}}/> {weapons[it][1]}</Col></Row>)}\r\n                  </td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Secondary Weapon</strong></th>\r\n                  <td>\r\n                      {content.equipment[1].secondary.map(it => <Row key={it} style={{marginBottom: '0.2rem'}}><Col><Image src={secondaryWeapons[it][0]} style={{verticalAlign: 'middle'}}/> {secondaryWeapons[it][1]}</Col></Row>)}\r\n                  </td>\r\n              </tr>\r\n              {\r\n                  content.equipment[2] &&\r\n                  <tr>\r\n                      <th><strong>Ammo</strong></th>\r\n                      <td><div><Image src={weaponConsumable[content.equipment[2].ammo][0]} style={{verticalAlign: 'middle'}}/> {weaponConsumable[content.equipment[2].ammo][1]}</div></td>\r\n                  </tr>\r\n              }\r\n              </tbody>\r\n          </Table>\r\n          </Container>\r\n      </div>\r\n  );\r\n}\r\n\r\n/*\r\n    Box component to accompany the Property table in class overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction PropertyBox({skills, classType}) {\r\n  return (\r\n      <div style={{paddingLeft: '0.5rem'}}>\r\n          <h5>Notable Skills</h5>\r\n          { skills.map( skill => \r\n              <NotableSkill key={skill.name} skill={skill}/>\r\n          )}\r\n          <h5>Class Type</h5>\r\n          {/* <Card>\r\n            <Card.Body>\r\n              <Row noGutters>\r\n                <Col xs=\"4\">\r\n                  <strong>Damage</strong>\r\n                </Col>\r\n                <Col >\r\n                  <div><Image src={`${process.env.PUBLIC_URL}/class-scale/damage-${classType.damage}.png`} width=\"150\"/></div>\r\n                </Col>\r\n              </Row>\r\n              <Row noGutters>\r\n                  <Col xs=\"4\">\r\n                    <strong>Defense</strong>\r\n                  </Col>\r\n                  <Col >\r\n                    <div><Image src={`${process.env.PUBLIC_URL}/class-scale/defense-${classType.defense}.png`} width=\"150\"/></div>\r\n                  </Col>\r\n              </Row>\r\n              <Row noGutters>\r\n                  <Col xs=\"4\">\r\n                    <strong>Mobility</strong>\r\n                  </Col>\r\n                  <Col >\r\n                    <div><Image src={`${process.env.PUBLIC_URL}/class-scale/mobility-${classType.mobility}.png`} width=\"150\"/></div>\r\n                  </Col>\r\n              </Row>\r\n              <Row noGutters>\r\n                  <Col xs=\"4\">\r\n                    <strong>Difficulty</strong>\r\n                  </Col>\r\n                  <Col >\r\n                    <div><Image src={`${process.env.PUBLIC_URL}/class-scale/difficulty-${classType.difficulty}.png`} width=\"150\"/></div>\r\n                  </Col>\r\n              </Row>\r\n              <Row noGutters>\r\n                  <Col xs=\"4\">\r\n                    <strong>Popularity</strong>\r\n                  </Col>\r\n                  <Col >\r\n                    <div><Image src={`${process.env.PUBLIC_URL}/class-scale/popularity-${classType.popularity}.png`} width=\"150\"/></div>\r\n                  </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card> */}\r\n          <ul>\r\n              {classType.map(it => <li key={it}>{it}</li>)}\r\n          </ul>\r\n      </div>\r\n  );\r\n}\r\n\r\n/*\r\n    Pros and Cons component in our class overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction ClassProsCons({pros, cons}) {\r\n  return (\r\n      <div className=\"pros-cons-container\">\r\n          <h2>Pros and Cons</h2>\r\n          <Container>\r\n              <h3>Pros</h3>\r\n              <ul>\r\n                  {pros.map( pro => <li key={pro}>{parse(DOMPurify.sanitize(pro))}</li>)}\r\n              </ul>\r\n              <h3>Cons</h3>\r\n              <ul>\r\n                  {cons.map( con => <li key={con}>{parse(DOMPurify.sanitize(con))}</li>)}\r\n              </ul>\r\n          </Container>\r\n      </div>\r\n  );\r\n}\r\n\r\n/*\r\n    Rendering base stats and buffs + actives in class overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction ClassDetail({content}) {\r\n    return (\r\n        <Container>\r\n          <Row>\r\n            <Col md=\"auto\" className=\"base-stats-width\">\r\n              <h2 className=\"base-stat-title\">Base Stats (From Skills)<InfoButton tooltip={parse(DOMPurify.sanitize(content.baseStats[0]))}/></h2>\r\n              <Table borderless>\r\n                <tbody>\r\n                    {content.baseStats[1].map((stat, index) => <tr key={index}><td className=\"stat-td\">{parse(DOMPurify.sanitize(stat))}</td></tr>)}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n            <Col md=\"auto\" className=\"buff-width\">\r\n              <h2>Buffs &amp; Other Actives</h2>\r\n              <Table size=\"sm\" borderless>\r\n                <tbody>\r\n                  <tr>\r\n                    <th><strong>Active Buffs</strong>:</th> <td className=\"buff-td\">{parse(DOMPurify.sanitize(content.buffInfo.active))}</td>\r\n                  </tr>\r\n                  {content.buffInfo.summons ? <tr><th><strong>Summons</strong>:</th> <td className=\"buff-td\">{parse(DOMPurify.sanitize(content.buffInfo.summons))}</td></tr> : <tr><th><strong>Summons</strong>:</th> <td>None</td></tr>}\r\n                  <tr>\r\n                    <th><strong>Buffs with Cooldowns</strong>:</th> <td className=\"buff-td\">{parse(DOMPurify.sanitize(content.buffInfo.buffCd))}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th><strong>5th Job Buffs</strong>:</th> <td className=\"buff-td\">{parse(DOMPurify.sanitize(content.buffInfo.buffFifth))}</td>\r\n                  </tr>\r\n                  {content.buffInfo.binds ? <tr><th><strong>Binds</strong>:</th> <td className=\"buff-td\">{parse(DOMPurify.sanitize(content.buffInfo.binds))}</td></tr> : <tr><th><strong>Binds</strong>:</th> <td>None</td></tr>}\r\n                  {content.buffInfo.iFrame ? <tr><th><strong>iFrames</strong>:</th> <td className=\"buff-td\">{parse(DOMPurify.sanitize(content.buffInfo.iFrame))}</td></tr> : <tr><th><strong>iFrames</strong>:</th> <td>None</td></tr>}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        <h2>Skill Build Path</h2>\r\n        <Table borderless>\r\n          <tbody>\r\n            {content.buildPath.build.map((build,index) => \r\n              <tr key={index}>\r\n                <th>{build[0]}:</th>\r\n                <td className=\"skill-td\">{parse(DOMPurify.sanitize(build[1]))}</td>\r\n              </tr>)}\r\n          </tbody>\r\n        </Table>\r\n        <ul>\r\n            {content.buildPath.details.map((detail,index) => <li key={index}>{parse(DOMPurify.sanitize(detail))}</li>)}\r\n        </ul>\r\n      </Container>\r\n    );\r\n}\r\n\r\n/*\r\n    Rendering How to create {Class Name} component of class overview\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport function ClassCreation({className, howToCreate}) {\r\n    return (\r\n        <Container>\r\n            <h2 className=\"creation-title\">How to create a {className}</h2>\r\n            <Image thumbnail\r\n                src={howToCreate.image[0]}\r\n                width={howToCreate.image[1][0]}\r\n                height={howToCreate.image[1][1]}\r\n                className=\"creation-image\"/>\r\n            {howToCreate.npc.map(npc => <Image key={npc} src={npc[0]} width={npc[1][0]} height={npc[1][1]} className=\"creation-image\"/>)}\r\n            <Card className=\"extra-content-width\">\r\n                <Card.Body>{howToCreate.info.map(info => <p key={info}>{parse(DOMPurify.sanitize(info, { ADD_ATTR: ['target'] }))}</p>)}</Card.Body>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport function ClassExtraContent({title, content}){\r\n    return(\r\n        <Container>\r\n            <h2>{title}</h2>\r\n            <Card className=\"extra-content-width\">\r\n                <Card.Body>{parse(DOMPurify.sanitize(content, { ADD_ATTR: ['target'] }))}</Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ClassIntro\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport { Button, Image } from 'react-bootstrap';\r\nimport SkillInfo from './SkillInfo'\r\nimport { version, loadingImage } from '../../special/Values';\r\n\r\n/*\r\n    This file contains both SkillContainer and VSkillContainer (exclusively for 5th Job Skills), containers to hold a list of skills\r\n*/\r\n\r\n/*\r\n    Skill container that will hold all our skills\r\n    Responsible for getting all skill data in order such as retrieving from API and combining with offline data if needed\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport class SkillContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        //SkillContainer holds all the required skills we need to render in skillData\r\n        //Their data will be stored in retrievedData after it has been fetched\r\n        //Loading is used to display loading image\r\n        this.state = {\r\n             retrievedData: [],\r\n             skillData: props.skillData,\r\n             loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { skillData } = this.state\r\n        this._isMounted = true;\r\n        //Array to hold all our requests that we will execute in one call\r\n        const request = [];\r\n        //Array to hold all retrieved skill data\r\n        const retrievedHolder = [];\r\n        //Array to store offline skills temporarily to insert into retrievedHolder at the end\r\n        const offlineHolder = [];\r\n\r\n        axiosRetry(axios, { retries: 5 }); //Retries request up to 5 times if request fails\r\n        //If skill has \"offline\" tag in JSON file, don't retrieve it from API and push it into the offlineHolder instead\r\n        skillData.forEach( (skill, index) => {\r\n            if(!skill.offline){\r\n                request.push(axios.get(`https://maplestory.io/api/GMS/${version}/job/skill/${skill.id}`));\r\n            }\r\n            else{\r\n                offlineHolder.push([skill, index]);\r\n            }\r\n        })\r\n        //Execute all calls then store the response data in retrievedHolder\r\n        axios.all(request)\r\n            .then(response => {\r\n                response.forEach(it => retrievedHolder.push(it.data));\r\n                //Push all offline skills into their correct positions\r\n                offlineHolder.forEach( skill => retrievedHolder.splice(skill[1], 0, skill[0]));\r\n                if(this._isMounted){\r\n                    this.setState({\r\n                        retrievedData: retrievedHolder,\r\n                        loading: false\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n\r\n\r\n    //Map each skill as a SkillInfo component by passing the following info: Name of skill, Skill Description, Short Description, Skill Properties, and Skill Master Level\r\n    render() {\r\n        const { loading, retrievedData } = this.state\r\n        return (\r\n            <div>\r\n            {\r\n                loading ? <div style={{margin: '2rem 0% 2rem 45%'}}><Image src={loadingImage}/><div style={{paddingLeft: '0.5rem'}}>Loading!</div></div> : \r\n                <div>\r\n                {\r\n                    retrievedData.map((skill, index) => \r\n                        skill.offline ?\r\n                            <div key={index}>\r\n                                <SkillInfo \r\n                                    skillData={skill}\r\n                                    name={skill.name}\r\n                                    properties={{}}\r\n                                    shortDesc={skill.shortDesc}\r\n                                    maxLevel={skill.maxLevel}/>\r\n                            </div>\r\n                        :\r\n                        //Offline skills require fetching all their info from json file instead\r\n                            <div key={index}>\r\n                                <SkillInfo \r\n                                    skillData={this.state.skillData[index]}\r\n                                    name={skill.description.name}\r\n                                    desc={skill.description.desc}\r\n                                    shortDesc={skill.description.shortDesc}\r\n                                    properties={skill.properties}\r\n                                    levelProperties={skill.levelProperties}\r\n                                    maxLevel={skill.properties.maxLevel}/>\r\n                            </div>\r\n                    )\r\n                }\r\n                <Button variant=\"link\"><Link smooth to=\"#skill\" scroll={el => scrollWidthOffset(el)}><span className=\"jump-button\"/></Link></Button>\r\n                </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n    Skill container for 5th job skills, retrieved info from JSON instead of API (offline skills)\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport function VSkillContainer({skillData}) {\r\n    return (\r\n        <div>\r\n            {\r\n                skillData.map( skill => \r\n                    <div key={skill.id}>\r\n                        <SkillInfo \r\n                            skillData={skill}\r\n                            name={skill.name}\r\n                            properties={{}}\r\n                            shortDesc={skill.shortDesc}\r\n                            maxLevel={\"25 + 5\"}/>\r\n                    </div>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n//Used to scroll to #skill anchor\r\n\r\nconst scrollWidthOffset = (el) => {\r\n    const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\r\n    const yOffset = -80; \r\n    window.scrollTo({ top: yCoordinate + yOffset, behavior: 'smooth' }); \r\n}\r\n\r\nexport default SkillContainer\r\n","import React from 'react';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport { Button, Container, Tab, Tabs} from 'react-bootstrap';\r\nimport DOMPurify from 'dompurify';\r\nimport parse from 'html-react-parser';\r\nimport { SkillContainer, VSkillContainer } from './SkillContainer';\r\nimport { commonFifth } from '../../special/Values';\r\n\r\n/*\r\n    Tab component in our class overviews, used to hold all the skill containers and switch between them\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\n//Used to create the pre-5th job tabs\r\nfunction createSkillTabs(primary){\r\n  return primary.map((skilltree, index) => \r\n    <Tab eventKey={skilltree[0]} title={skilltree[0]} key={index}>\r\n      <SkillContainer skillData={skilltree[1]}/>\r\n    </Tab>);\r\n}\r\n\r\n//Retrieves the common 5th job skills defined in our Values.js and returns it as an array\r\nfunction convertCommonVToArray(fifth){\r\n  const skills = [];\r\n  fifth.fifthCommon.forEach( it => skills.push(commonFifth[it]));\r\n  return skills;\r\n}\r\n\r\n//Used for scrolling purposes\r\nconst scrollWidthOffset = (el) => {\r\n  const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\r\n  const yOffset = -80; \r\n  window.scrollTo({ top: yCoordinate + yOffset, behavior: 'smooth' }); \r\n}\r\n\r\n\r\nexport function SkillTab({primary, fifth, hyper, hyperSkillBuild, nodeInfo}) {\r\n  return (\r\n    <Container>\r\n      <h2>Skill Information</h2>\r\n      <Tabs>\r\n        {createSkillTabs(primary)}\r\n        <Tab eventKey=\"fifth\" title=\"5th Job\">\r\n          <h4>Recommended Skills for Boost Nodes</h4>\r\n          <Container>{parse(DOMPurify.sanitize(nodeInfo.recommended))}</Container>\r\n          <ul>\r\n          </ul>\r\n          <h4>All Possible Skills Obtainable for Boost Nodes</h4>\r\n          <Container>{parse(DOMPurify.sanitize(nodeInfo.possible))}</Container>\r\n          <h3>Common V Skills</h3>\r\n          <VSkillContainer skillData={convertCommonVToArray(fifth)}/>\r\n          <h3>Class Specific V Skills</h3>\r\n          <VSkillContainer skillData={fifth.fifthMain}/>\r\n          <Button variant=\"link\"><Link smooth to=\"#skill\" scroll={el => scrollWidthOffset(el)}><span className=\"jump-button\"/></Link></Button>\r\n        </Tab>\r\n        {hyper && <Tab eventKey=\"hyper\" title=\"Hyper Skills\">\r\n          <h3>Passive Build</h3>\r\n          {parse(DOMPurify.sanitize(hyperSkillBuild.recommended))}\r\n          <h3>Passive Skills</h3>\r\n          <SkillContainer skillData={hyper.hyperPassive}/>\r\n          <h3>Active Skills</h3>\r\n          <SkillContainer skillData={hyper.hyperActive}/>\r\n        </Tab>}\r\n      </Tabs>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SkillTab\r\n","import React from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Scrollbar } from 'swiper';\r\nimport { Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { classes } from '../../special/Values';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nSwiperCore.use([Scrollbar]);\r\n\r\nfunction ClassSwipe({classGroup}) {\r\n    return (\r\n        <Swiper\r\n            scrollbar={{ draggable: true, hide: true }}\r\n            spaceBetween={10}\r\n            slidesPerView={2}\r\n            breakpoints={{\r\n                // when window width is >= 360px\r\n                360: {\r\n                    slidesPerView: 3.5,\r\n                  },\r\n                // when window width is >= 490px\r\n                490: {\r\n                    slidesPerView: 4.5,\r\n                  },\r\n                // when window width is >= 770px\r\n                770: {\r\n                    slidesPerView: 5.5,\r\n                  },\r\n                // when window width is >= 991px\r\n                991: {\r\n                  slidesPerView: 8.5,\r\n                },\r\n                // when window width is >= 1199px\r\n                1199: {\r\n                    slidesPerView: 9.5,\r\n                  },\r\n                \r\n            }}\r\n        >\r\n            {renderSwitch(classGroup)}\r\n        </Swiper>\r\n    )\r\n}\r\n\r\n//Renders the proper class groups based on current class group\r\nfunction renderSwitch(param){\r\n    switch (param) {\r\n        case \"Explorers\":\r\n            return(\r\n                classes.explorers.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Cygnus Knights\":\r\n            return(\r\n                classes.cygnusKnights.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 0 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Heroes\":\r\n            return(\r\n                classes.heroes.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Resistance\":\r\n            return(\r\n                classes.resistance.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Resistance (Xenon)\":\r\n            return(\r\n                classes.resistance.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Resistance (Demon)\":\r\n            return(\r\n                classes.resistance.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Nova\":\r\n            return(\r\n                classes.nova.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Sengoku\":\r\n            return(\r\n                classes.sengoku.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Flora\":\r\n            return(\r\n                classes.flora.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Other\":\r\n            return(\r\n                classes.other.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Other (Anima)\":\r\n            return(\r\n                classes.other.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Other (FriendStory)\":\r\n            return(\r\n                classes.other.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Other (Child of God)\":\r\n            return(\r\n                classes.other.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Other (Beast Tamer)\":\r\n            return(\r\n                classes.other.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        default:\r\n            return(\r\n                classes.explorers.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <div className=\"class-overlay\"/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n    }\r\n}\r\n\r\nexport default ClassSwipe\r\n","import React from 'react'\r\nimport '../../css/class-overview.css';\r\nimport ClassSwipe from './ClassSwipe';\r\n\r\n/*\r\nThis file contains the outro contents (after the skills overview) of a Class Overview\r\nIn this file you will find:\r\n-ClassOutro - contains the more info and credits\r\n-ClassMoreInfo - renders the links in more info\r\n-ClassCredits - renders the credits\r\n*/\r\n\r\nexport function ClassOutro({classGroup, className, moreInfo, credits}) {\r\n    return (\r\n        <div>\r\n            <ClassMoreInfo className={className} moreInfo={moreInfo}/>\r\n            <ClassSuggestions classGroup={classGroup}/>\r\n            <ClassCredit credits={credits}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\n    Rendering the links found in more info component in our class overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction ClassMoreInfo({className, moreInfo}) {\r\n    return (\r\n        <div>\r\n            <h5>For more information about {className} check out:</h5>\r\n            {moreInfo.map(link => <div className=\"more-info-link\" key={link}><a href={link} target='_blank' rel=\"noopener noreferrer\">{link}</a></div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\n    Rendering suggestion classes from the same class group\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction ClassSuggestions({classGroup}) {\r\n    return (\r\n        <div>\r\n            <h5>Check out some more {classGroup} classes below:</h5>\r\n            <ClassSwipe classGroup={classGroup}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\n    Rendering credits component in our class overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction ClassCredit({credits}) {\r\n    return (\r\n        <div>\r\n            <h3>Credits</h3>\r\n            {credits.map(credit => <div className=\"credit\" key={credit}><strong>{credit[0]}</strong>: {credit[1]}</div>)}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ClassOutro\r\n"],"sourceRoot":""}